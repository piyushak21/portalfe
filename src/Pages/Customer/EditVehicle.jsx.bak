import React, { useEffect, useState } from "react";
import Form from "react-bootstrap/Form";
import InputGroup from "react-bootstrap/InputGroup";
import { Container } from "react-bootstrap";
import { Link, useParams } from "react-router-dom";
import axios from "axios";

const EditVehicle = () => {
  const { vehicle_id } = useParams();
  const [idData, setIdData] = useState(["starkenn"]);
  const [data, setData] = useState([]);
  const [iotData, setIotData] = useState([]);
  const [ecuData, setEcuData] = useState([]);
  const [dmsData, setDmsData] = useState([]);
  const user_id = localStorage.getItem("user_id");
  const token = localStorage.getItem("token");

  useEffect(() => {
    /////////Getting Data of vehicle
    axios
      .get(
        `${process.env.REACT_APP_BASE_URL}/vehicles/vehicle-card/${vehicle_id}`,
        {
          headers: { authorization: `bearer ${token}` },
        }
      )
      .then((res) => {
        console.log(idData);
        setIdData(res.data.IdData);
      })
      .catch((err) => {
        console.log(err);
      });

    ///getting data of iot remaining
    axios
      .get(`${process.env.REACT_APP_BASE_URL}/vehicles/get-iot`, {
        headers: { authorization: `bearer ${token}` },
      })
      .then((res) => {
        setIotData(res.data.IotData);
      })
      .catch((err) => {
        console.log(err);
      });

    ///getting ecu remaining
    axios
      .get(`${process.env.REACT_APP_BASE_URL}/vehicles/get-ecu`, {
        headers: { authorization: `bearer ${token}` },
      })
      .then((res) => {
        setEcuData(res.data.ECUData);
      })
      .catch((err) => {
        console.log(err);
      });

    ///dms data
    axios
      .get(`${process.env.REACT_APP_BASE_URL}/vehicles/get-dms`, {
        headers: { authorization: `bearer ${token}` },
      })
      .then((res) => {
        setDmsData(res.data.DMSdata);
      })
      .catch((err) => {
        console.log(err);
      });
  }, [vehicle_id, token]);

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log(data);

    axios
      .put(
        `${process.env.REACT_APP_BASE_URL}/vehicles/editvehicle/${user_id}/${vehicle_id}`,
        data,
        {
          headers: { authorization: `bearer ${token}` },
        }
      )
      .then((res) => {
        console.log(res);
        alert("Data Updated Successfully");
      })
      .catch((err) => {
        console.log(err);
        alert("Error in Updating Data");
      });
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setData({ ...data, [name]: value });
  };
  return (
    <Container className="mt-4 mb-5">
      <div className="row justify-content-center">
        <div className="col-md-6">
          <form onSubmit={handleSubmit}>
            <div>
              <Link to="/vehicle">&#8592; Vehicle</Link>
              <h4>Edit Vehicle</h4>
            </div>
            <div className="card">
              <div className="card-body">
                <div>
                  <label htmlFor="">Vehicle Name</label>
                  <InputGroup className="mb-3">
                    <Form.Control
                      defaultValue={idData[0].vehicle_name}
                      name="vehicle_name"
                      onChange={handleChange}
                    />
                  </InputGroup>
                </div>
                <div>
                  <label htmlFor="">Registration Number</label>
                  <InputGroup className="mb-3">
                    <Form.Control
                      defaultValue={idData[0].vehicle_registration}
                      name="vehicle_registration"
                      onChange={handleChange}
                    />
                  </InputGroup>
                </div>

                <div>
                  <label htmlFor="">Status</label>
                  <Form.Select
                    onChange={handleChange}
                    name="status"
                    className="mb-3"
                  >
                    <option>
                      {idData[0].status == 1 ? "Active" : "Deactive"}
                    </option>
                    <option value="0">Deleted</option>
                    <option value="1">Active</option>
                    <option value="2">Deactive</option>
                  </Form.Select>
                </div>

                <div>
                  <label htmlFor="">Select ECU</label>
                  <Form.Select
                    name="ecu"
                    onChange={handleChange}
                    className="mb-3"
                  >
                    <option>{idData[0].ecu}</option>
                    <option value={null}>Unassign</option>
                    {ecuData?.map((el) => {
                      return (
                        <option key={el.id} value={`${el.device_id}`}>
                          {el.device_id}
                        </option>
                      );
                    })}
                  </Form.Select>
                </div>
                <div>
                  <label htmlFor="">Select IoT</label>
                  <Form.Select
                    name="iot"
                    onChange={handleChange}
                    className="mb-3"
                  >
                    <option>{idData[0].iot}</option>
                    <option value={null}>Unassign</option>
                    {iotData?.map((el) => {
                      return (
                        <option key={el.id} value={`${el.device_id}`}>
                          {el.device_id}
                        </option>
                      );
                    })}
                  </Form.Select>
                </div>
                <div>
                  <label htmlFor="">Select DMS</label>
                  <Form.Select name="dms" onChange={handleChange}>
                    <option>
                      {idData[0].dms == null ? "Not Assign" : idData[0].dms}
                    </option>
                    <option value={null}>Unassign</option>
                    {dmsData?.map((el) => {
                      return (
                        <option key={el.id} value={`${el.device_id}`}>
                          {el.device_id}
                        </option>
                      );
                    })}
                  </Form.Select>
                </div>

                <div className="text-center mt-3">
                  <button className="btn btn-theme w-100 btn-lg" type="submit">
                    SUBMIT
                  </button>
                </div>
              </div>
            </div>
          </form>
        </div>
      </div>
    </Container>
  );
};

export default EditVehicle;
